# SSH Tunnel Action
# =================
#
# This action will create a reverse ssh tunnel to a github runner.
#
#
# Usage
# -----
#
# Create a key for the server.
#
# ssh-keygen -f ./runner -N ''
#
# Copy the contents of the runner private key into a github secret which can ba accessed by your workflow.
#
# ```
# steps:
#   - name: SSH Tunnel
#     uses: ./.github/actions/ssh-tunnel
#     with:
#       user: dan
#       host: 95.212.213.150
#       public_key: "ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIAVGQIPTuC5Hgj9h5LV5tda6nZdHCsFvqFjBvSAYjfEQ dan@carbon"
#       private_key: "${{ secrets.PRIVATE_KEY }}"
# ```
---
name: ssh-tunnel
description: SSH Reverse Tunnel

inputs:
  user:
    required:
    description: SSH User
  public_key:
    required: true
    description: Public key to accept for reverse tunnel. Warning, this should not be the public key for the 'private_key' input.
  private_key:
    required: true
    description: Private key for the runner
  host:
    required: true
    description: Host to estabish a reverse tunnel
  host_port:
    required: false
    description: The host's ssh server port. Default 22
    default: 22
  tunnel_port:
    required: false
    description: Port to use for the reverse tunnel. Default 5222
    default: 5222

runs:
  using: composite

  steps:

    - name: SSH
      shell: sh
      run: |
       ssh-keygen -f ./ssh_host_dsa_key -N '' -t dsa
       ssh-keygen -f ./ssh_host_ecdsa_key -N '' -t ecdsa -b 521
       ssh-keygen -f ./ssh_host_ed25519_key -N '' -t ed25519
       echo "${{ inputs.public_key }}"" > ./authorized_keys
       echo "${{ inputs.public_key }}" | sudo tee -a /root/.ssh/authorized_keys
       cat <<'EOF' > ./sshd_config
       AcceptEnv LANG LC_*
       AuthorizedKeysFile /home/runner/work/salt/salt/authorized_keys
       ChallengeResponseAuthentication no
       HostKey /home/runner/work/salt/salt/ssh_host_dsa_key
       HostKey /home/runner/work/salt/salt/ssh_host_ecdsa_key
       HostKey /home/runner/work/salt/salt/ssh_host_ed25519_key
       HostbasedAuthentication no
       IgnoreRhosts yes
       ListenAddress 127.0.0.1
       LogLevel INFO
       LoginGraceTime 120
       PasswordAuthentication no
       PermitEmptyPasswords no
       PermitRootLogin without-password
       PidFile /tmp/sshd.pid
       PrintLastLog yes
       PrintMotd no
       Protocol 2
       PubkeyAuthentication yes
       StrictModes no
       Subsystem sftp /usr/libexec/openssh/sftp-server
       SyslogFacility AUTH
       TCPKeepAlive yes
       UsePAM yes
       X11DisplayOffset 10
       X11Forwarding no
       EOF
       sudo mkdir -p /var/run/sshd
       sudo chmod 0755 /var/run/sshd
       sudo /usr/sbin/sshd -f ./sshd_config -p ${{ inputs.tunnel_port }}
       echo "${{ inputs.private_key }}" > ./key
       chmod 600 ./key
       ls -lah
       ssh -vv -o ServerAliveInterval=20 -o TCPKeepAlive=no -o StrictHostKeyChecking=no -i ./key -R 127.0.0.1:${{ inputs.tunnel_port }}:127.0.0.1:${{ inputs.tunnel_port }} -p ${{ inputs.host_port }}${{ inputs.user }}@${{ inputs.host }} tail -f /dev/null
