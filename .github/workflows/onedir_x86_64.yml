name: Build Linux Onedir x86_64

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3

    - name: Install relenv
      run: pip3 install relenv

    - name: Create Onedir
      env:
        RELENV_PIP_DIR: yes
        RELENV_DEBUG: yes
        USE_STATIC_REQUIREMENTS: 1
      run: |
        mkdir build
        cd build
        relenv toolchain fetch --arch=x86_64
        relenv fetch --arch=x86_64
        relenv create salt
        salt/bin/pip3 install ../ --no-cache
        tar -cvf salt.tar.xz salt

    - name: Artifact
      uses: actions/upload-artifact@v3
      with:
        name: Salt Onedir X86_64
        path: build/salt*.tar.xz

  test:
    needs: build
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        test-paths:
          - tests/unit tests/pytests/unit
          - tests/pytests/functional
          - tests/pytests/scenarios
          - --ignore=tests/unit --ignore=tests/pytests/unit --ignore=tests/pytests/functional --ignore=tests/pytests/scenarios

    steps:
    - uses: actions/checkout@v3

    - name: Fetch Artifact
      uses: actions/download-artifact@v3
      with:
        name: Salt Onedir X86_64

    - name: Extract Artifact
      run: |
        mkdir salt-artifacts
        cp salt*tar.xz salt-artifacts/
        cd salt-artifacts
        tar -xvf salt*tar.xz

    - name: Install Nox
      run: |
        sudo apt-get install -y libcurl4-openssl-dev libssl-dev
        sudo salt-artifacts/salt/bin/python3 -m pip install nox

    - name: Install Requirements
      run: |
        sudo env PATH=salt-artifacts/salt/bin:${PATH} nox --force-color --install-only -e 'pytest-zeromq-3(coverage=True)'

    - name: Run Tests
      run: |
        sudo env SKIP_REQUIREMENTS_INSTALL=YES PATH=salt-artifacts/salt/bin:${PATH} \
          nox --force-color -e 'pytest-zeromq-3(coverage=True)' -- --color=yes \
          -vv --scripts-dir=salt-artifacts/salt --run-slow --ssh-tests --run-destructive ${{ matrix.test-paths }}
